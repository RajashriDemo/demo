@model jQueryAjaxInAsp.NETMVC.Models.ItemMst

@{
    ViewBag.Title = "AddOrEdit";
    Layout = null;
}



@using (Html.BeginForm("AddOrEdit", "Item", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "Item", new { id=0}) }))//data-resetUrl
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ItemId)
            @Html.HiddenFor(model => model.ItemImage)

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ItemName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemDescription, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemDescription)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemPrice, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemPrice)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @if (Model.ItemId == 0)
                        {
                            <input type="submit" value="Submit" class="btn btn-default" />
                        }
                        @if (Model.ItemId != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddOrEdit","Item",new{id=0})',false)"><i class="fa fa-plus"></i> Add New</a>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ItemImage, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <img src="@Url.Content(Model.ItemImage)" style="margin:10px" height="200" width="200" id="imagePreview"/>
                        <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>
            
        </div>
    </div>
}

